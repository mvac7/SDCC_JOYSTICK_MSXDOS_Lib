SDCC Joystick MSX-DOS Functions Library
Version: 1.0 (2/12/2020)
Author: mvac7
Architecture: MSX
Format: C Object (SDCC .rel)
Programming language: C and Z80 assembler 
Source Code: https://github.com/mvac7/SDCC_JOYSTICK_MSXDOS_Lib 


History of versions:
- v1.0 (2/12/2020)


 

>>> Warning!: Document pending correction. <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

--------------------------------------------------------------------------------
Index:

1 Introduction
2 Requirements
3 Acknowledgments
4 Definitions
  4.1 Joystick type
  4.2 Joystick state
  4.3 Trigger type
  4.4 Trigger state
5 Functions
  5.1 STICK
  5.2 STRIG 
                       


--------------------------------------------------------------------------------
1 Introduction:

This project is an Open Source library with basic functions for reading joystick
controllers or cursor keys of MSX computers.

Use them for developing MSX applications using Small Device C Compiler (SDCC).

This library uses functions from the MSX BIOS through interslot calls (CALSLT), 
so that they can be used in MSXDOS applications.

In the gitHub repository you will find the sources of two applications for test 
and learning purposes.

This library is part of the MSX fR3eL Project 
                                         https://github.com/mvac7/SDCC_MSX_fR3eL                           


--------------------------------------------------------------------------------
2 Requirements:

 * Small Device C Compiler (SDCC) v3.9 
   http://sdcc.sourceforge.net/
     
 * Hex2bin v2.5 
   http://hex2bin.sourceforge.net/
   
   
   
--------------------------------------------------------------------------------
3 Acknowledgments
  
I want to give a special thanks to all those who freely share their knowledge 
with the MSX developer community.

- Avelino Herrera > http://msx.atlantes.org/index_es.html
- Nerlaska > http://albertodehoyonebot.blogspot.com.es
- Marq/Lieves!Tuore > http://www.kameli.net/marq/
- Fubukimaru > https://github.com/Fubukimaru
- Andrear > http://andrear.altervista.org/home/msxsoftware.php
- Sapphire/Z80ST > http://z80st.auic.es/
- BitVision > http://www.z80st.es/cursos/bitvision-assembler
- Eric Boez > https://github.com/ericb59
- MSX Assembly Page > http://map.grauw.nl/resources/msxbios.php
- Portar MSX Tech Doc > http://nocash.emubase.de/portar.htm
- MSX Resource Center > http://www.msx.org/
- Karoshi MSX Community (RIP 2007-2020)
- BlueMSX emulator >> http://www.bluemsx.com/
- OpenMSX emulator >> http://openmsx.sourceforge.net/
- Meisei emulator >> ?
   
   

--------------------------------------------------------------------------------
4 Constants


4.1 Joystick type
 
 *  CURSORKEYS  0
 *  JOYA        1
 *  JOYB        2


4.2 Joystick state

 *  INACTIVE    0
 *  UP          1
 *  UP_RIGHT    2
 *  RIGHT       3
 *  DOWN_RIGHT  4
 *  DOWN        5
 *  DOWN_LEFT   6
 *  LEFT        7
 *  UP_LEFT     8


4.3 Trigger type

 *  SPACEBAR       0
 *  JOYA_BUTTONA   1
 *  JOYB_BUTTONA   2
 *  JOYA_BUTTONB   3
 *  JOYB_BUTTONB   4


4.4 Trigger state

 *  UNPRESSED   0
 *  PRESSED    -1



--------------------------------------------------------------------------------
5 Functions


================================================================================
5.1 STICK

 Function : 
            char STICK(char joy)
            
 Description:
            Returns the joystick status
            
 Input    : [char] joy port: 
                    0=cursor keys 
                    1=joystick A 
                    2=joystick B
                             
 Output   : [char] status:
                    0=inactive
                    1=up
                    2=up & right
                    3=right
                    4=down & right
                    5=down
                    6=down & left
                    7=left
                    8=up & left
                             
 Examples : 
            char A;
            A = STICK(0);
            if (A==1) UP();
            


================================================================================
5.2 STRIG 

 Function : 
            signed char STRIG(char joy)
            
 Description:
            Returns the trigger status.
            
 Input    : [char] 
                    0 - space key
                    1 - button 1 joy A
                    2 - button 1 joy B
                    3 - button 2 joy A
                    4 - button 2 joy B
                    
 Output   : [char] status: 
                    0 = inactive
                   -1 = when the space key or the joystick/mouse button is 
                        pressed down 
 
 Examples :              
            signed char Action;
            Action = STRIG(0);            
            if (Action<0) Fire();
            
            signed char Action;
            Action = STRIG(0);
            if (Action==UNPRESSED) Action = STRIG(1);
            if (Action==PRESSED) Fire();


--------------------------------------------------------------------------------
